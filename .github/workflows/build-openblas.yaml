name: Build OpenBLAS

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  openblas_windows:
    name: Build OpenBLAS on Windows
    runs-on: windows-latest
    env: 
      OPENBLAS_VERSION: fix-flang-new
    strategy: 
      matrix:
        target:
          - name: x64
            opts: "-DBINARY=64 -DUSE_THREAD=OFF -DUSE_LOCKING=ON"
          # - name: x86
          #   opts: "-DBINARY=32 -DUSE_THREAD=OFF -DUSE_LOCKING=ON"
          # - name: x64-64
          #   opts: "-DBINARY=64 -DUSE_THREAD=ON -DNUM_THREADS=64"
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Cache conda
        uses: actions/cache@v3
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          enableCrossOsArchive: true
          path: D:\conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}

      - name: download and unzip OpenBLAS 
        run: |
          curl -LO "https://github.com/Dirreke/OpenBLAS/archive/refs/heads/fix-flang-new.zip"
          7z x "OpenBLAS-${{ env.OPENBLAS_VERSION }}.zip"
          mv "OpenBLAS-${{ env.OPENBLAS_VERSION }}" OpenBLAS

      - name: Set Up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with: 
          pkgs-dirs: D:\conda_pkgs_dir
          auto-activate-base: true
          activate-environment: ""

      - name: Install Conda Packages
        run: |
          conda config --add channels conda-forge --force
          conda config --set auto_update_conda false
          conda install --yes --quiet cmake flang clangdev perl libflang ninja make gfortran

      - name: Add msbuild to PATH
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure CMake
        env:
          COMMON_OPTS: -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_C_COMPILER=clang-cl -DCMAKE_Fortran_COMPILER=flang-new -DCMAKE_MT=mt -DBUILD_SHARED_LIBS=ON -DBUILD_STATIC_LIBS=ON -DBUILD_WITHOUT_LAPACK=no -DNOFORTRAN=0 -DDYNAMIC_ARCH=ON -DCMAKE_BUILD_TYPE=Release
        run: |
          conda activate base
          $env:LIB+=";${{ env.CONDA }}\Library\lib"
          $env:CPATH+=";${{ env.CONDA }}\Library\include"
          cd OpenBLAS
          # mkdir build
          # cd build

          # cmake .. -G "Ninja" ${{ env.COMMON_OPTS }} ${{ matrix.target.opts }}

      - name: Build OpenBLAS
        run: |
          conda activate base
          $env:LIB+=";${{ env.CONDA }}\Library\lib"
          $env:CPATH+=";${{ env.CONDA }}\Library\include"
          cd OpenBLAS
          make CC=clang-cl FC=flang-new AR="llvm-ar" DYNAMIC_ARCH=1 RANLIB="llvm-ranlib" MAKE=make

      - name: Install OpenBLAS
        run: |
          cd OpenBLAS
          $env:PREFIX=../openblas-windows-latest 
          make install

      - name: Archive OpenBLAS Build
        uses: actions/upload-artifact@v4
        with:
          name: OpenBLAS-${{ env.OPENBLAS_VERSION }}-MSVC-${{ matrix.target.name }}
          path: openblas-windows-latest
