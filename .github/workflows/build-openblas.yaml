name: Build OpenBLAS

on:
  push:
    branches:
      - master
  workflow_dispatch:

# OpenBLAS builds
# - 939452ea9dcb57abdcc3f1278c6db668a4690465 <= Fast and works, but there might be a bug?

jobs:
  openblas_windows:
    name: Build OpenBLAS on Windows
    runs-on: windows-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ steps.extract_branch.outputs.branch }}

      - name: Set Up Miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Get Latest CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Install Conda Packages
        run: |
          conda config --add channels conda-forge --force
          conda config --set auto_update_conda false
          conda install --yes --quiet cmake flang clangdev perl libflang ninja

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      # - name: Configure CMake
      #   run: |
      #     cd OpenBLAS
      #     mkdir build
      #     cd build
      #     cmake .. -G "Ninja" -DCMAKE_MT=mt -DBUILD_SHARED_LIBS=ON -DBUILD_WITHOUT_LAPACK=no -DNOFORTRAN=0 -DBINARY=64 -DINTERFACE64=1 -DNUM_THREADS=256 -DDYNAMIC_ARCH=ON -DDYNAMIC_LIST='CORE2;NEHALEM;SANDYBRIDGE;BULLDOZER;HASWELL' -DTARGET=NEHALEM -DCMAKE_BUILD_TYPE=Release
      #   env:
      #     CC: clang
      #     CXX: clang

      - name: Configure CMake
        run: |
          cd OpenBLAS
          mkdir build
          cd build

          $commonArgs = "-DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_C_COMPILER=clang-cl -DCMAKE_Fortran_COMPILER=flang -DCMAKE_MT=mt -DBUILD_SHARED_LIBS=ON -DBUILD_WITHOUT_LAPACK=no -DBINARY=64 -DNUM_THREADS=256 -DNOFORTRAN=0 -DDYNAMIC_ARCH=ON -DCMAKE_BUILD_TYPE=Release"
          # $env:CC = "clang-cl"
          # $env:CXX = "clang-cl"
          # $env:FC = "flang"

          $vs2022 = $false
          $vs2019 = $false
          $ninja = $false

          try {
            cmake .. -G "Visual Studio 17 2022" $commonArgs
            $vs2022 = $true
          } catch {
            Write-Host "Visual Studio 2022 generator failed."
          }

          if (-Not $vs2022) {
            try {
              cmake .. -G "Visual Studio 16 2019" $commonArgs
              $vs2019 = $true
            } catch {
              Write-Host "Visual Studio 2019 generator failed."
            }
          }

          if (-Not $vs2022 -And -Not $vs2019) {
            try {
              cmake .. -G "Ninja" $commonArgs
              $ninja = $true
            } catch {
              Write-Host "Ninja generator failed."
            }
          }

          if (-Not $vs2022 -And -Not $vs2019 -And -Not $ninja) {
            Write-Host "All generators failed."
            exit 1
          }
        env:
          CC: clang
          CXX: clang

      - name: Build OpenBLAS
        run: |
          cd OpenBLAS
          cd build
          cmake --build . --config Release

      - name: Install OpenBLAS
        run: |
          cd OpenBLAS
          cd build
          cmake --install . --config Release --prefix ../../openblas-windows-latest
      
      - name: Push Changes
        continue-on-error: true
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@users.noreply.github.com"

          git pull
          git add -A
          git commit -m "Update OpenBLAS on Windows"
          git push origin master

      - name: Archive OpenBLAS Build
        uses: actions/upload-artifact@v3
        with:
          name: OpenBLAS on windows-latest
          path: openblas-windows-latest

